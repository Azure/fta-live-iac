# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: none

pool:
  vmImage: 'windows-latest'

variables:
  - group: connectionStrings

  - name: 'buildConfiguration'
    value: 'Release'
  - name: 'resource_group' 
    value: 'arm-demo-rg'
  - name: 'location'
    value: 'Australia East'
  - name: 'app_service_name' 
    value: 'vwvarmdemo-ado'
  - name: 'deploy_app'
    value: true
  - name: 'deploy_infra' 
    value: true
  - name: 'slots'
    value: |
      [
        {
          "name": "dev",
          "connectionString": "__devconnstr__",
          "connectionType": "Custom"
        },
        {
          "name": "test",
          "connectionString": "__testconnstr__",
          "connectionType": "Custom"
        },
        {
          "name": "production",
          "connectionString": "__prodconnstr__",
          "connectionType": "Custom"
        }
      ]

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: BuildCode
    displayName: Build Code
    condition: eq(variables.deploy_app,true)
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)' 
    - task: DotNetCoreCLI@2
      displayName: publish Code
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True
    - task: PublishBuildArtifacts@1
      displayName: Publish artifacts
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'artifacts'

  - job: BuildInfra
    displayName: Build Infrastructure
    condition: eq(variables.deploy_infra,true)
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: '$(azure_service_connection)'
        subscriptionId: '$(subscription_id)'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resource_group)'
        location: '$(location)'
        templateLocation: 'Linked artifact'
        csmFile: '$(System.DefaultWorkingDirectory)/arm_templates/webapp/deployment.json'
        csmParametersFile: '$(System.DefaultWorkingDirectory)/arm_templates/webapp/deployment.parameters.json'
        overrideParameters: '-name $(app_service_name) -sku S1 -os Windows -instanceCount 1 -slots $(slots)'
        deploymentMode: 'Incremental'

- stage: DevRelease
  displayName: Release to Dev
  condition: eq(variables.deploy_app,true)
  dependsOn: Build
  jobs:
  - deployment: dev
    displayName: deploy to dev
    environment: dev
    strategy:
      runOnce:
        deploy:
          steps:
          - template: release-steps.yml
            parameters:
              azure_service_connection: $(azure_service_connection)
              app_service_name: $(app_service_name)
              resource_group: $(resource_group)
              environment: $(Environment.Name)
              connection_string: $(testconnstr)

- stage: TestRelease
  displayName: Release to Test
  condition: eq(variables.deploy_app,true)
  dependsOn: DevRelease
  jobs:
  - deployment: test
    displayName: deploy to test
    environment: test
    strategy:
      runOnce:
        deploy:
          steps:
          - template: release-steps.yml
            parameters:
              azure_service_connection: $(azure_service_connection)
              app_service_name: $(app_service_name)
              resource_group: $(resource_group)
              environment: $(Environment.Name)
              connection_string: $(testconnstr)
          
- stage: ProdRelease
  displayName: Release to Production
  condition: eq(variables.deploy_app,true)
  dependsOn: TestRelease
  jobs:
  - job: manual_intervention
    steps:
    - task: ManualValidation@0
      inputs:
        notifyUsers: 'wviriya@microsoft.com'
        instructions: 'Please review App Service Test Slot before proceed.'
  - deployment: prod
    displayName: swap production slot
    environment: prod
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureAppServiceSettings@1
            inputs:
              azureSubscription: '$(azure_service_connection)'
              appName: '$(app_service_name)'
              resourceGroupName: '$(resource_group)'
              slotName: 'production'
              connectionStrings: |
                [
                  {
                    "name": "$(Environment.Name)connstr",
                    "value": "$(prodconnstr)",
                    "type": "Custom",
                    "slotSetting": true
                  }
                ]
          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: '$(azure_service_connection)'
              Action: 'Swap Slots'
              WebAppName: '$(app_service_name)'
              ResourceGroupName: '$(resource_group)'
              SourceSlot: 'test'

