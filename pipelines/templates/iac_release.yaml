parameters:
  location: 'Australia East'
  environment: 'nonprod'
  name: 'toylaunch'
  fileName: 'main.json'

stages:
  - stage: 'Deploy_${{ parameters.environment }}_${{ parameters.name }}_infrastructure'
    jobs: 
    - job: Validate_Deployment
      steps:
      - task: DownloadBuildArtifacts@0
        displayName: 'Download compiled ARM template'
        inputs:
          buildType: 'specific'
          project: '$(project_name)' # Azure DevOps Project Name
          # this PipelineId will need to be updated based on the ID of your CI pipeline. This wouldnt be a problem if you use a single Build & Deploy YAML pipeline...
          pipeline: '$(pipeline_id)' # Pipeline ID
          specificBuildWithTriggering: true
          buildVersionToDownload: 'latest'
          downloadType: 'specific'
          downloadPath: '$(Pipeline.Workspace)'
          artifactName: 'templates'

      - bash: |
          az deployment group what-if 
          --resource-group ${environment}-${name}-rg 
          --name validate-${environment}-${name}-rg 
          --template-uri /templates/${filename}
        displayName: 'What-if'
        name: 'what_if'
        workingDirectory: $(Pipeline.Workspace)
        env:
          environment: $(parameters.environment)
          name: $(parameters.name)
          filename: $(fileName)

    - job: Check_Validation_Result
      pool: server
      - task: ManualValidation@0
        timeoutInMinutes: 1440 # task times out in 1 day
        inputs:
          notifyUsers: |
            wviriya@microsoft.com
          instructions: 'Please validate what-if result and resume'
          onTimeout: 'resume'

    - job: Deploy_Infra
      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'azure_service_connection'
          subscriptionId: '$(subscription_id)'
          action: 'Create Or Update Resource Group'
          resourceGroupName: '${{ parameters.environment }}-${{ parameters.name }}-rg'
          location: '${{ parameters.location }}'
          templateLocation: 'Linked artifact'
          # these next 2 lines need to be updated based on your template file name, and template file parameters
          csmFile: '$(Pipeline.Workspace)/templates/$(fileName)'
          overrideParameters: -name "${{ parameters.name }}"  -environment "${{ parameters.environment }}"
          deploymentMode: 'Incremental'
